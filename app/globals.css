/* global.css — versión final (lista para pegar) */

/* === Tailwind entry (mantén esto si tu pipeline usa Tailwind) === */
@import "tailwindcss";

/* === Diseño — variables (paleta recomendada) === */
:root {
  --background: #ffffff;
  --foreground: #171717;
  --turquoise: #00c2c7;
  --navy: #003c57;
  --coral: #ff6f61;
  --mint: #a8e6cf;
  --white: #ffffff;
  --bg: #f5f7f8;
  --text: #3c3c3c;
  --text-strong: #0f1720;
  --shadow: 0 6px 20px rgba(3, 60, 87, 0.12);

  /* RGB helpers (útiles para forzar colores con alpha si hace falta) */
  --text-r: 60;
  --text-g: 60;
  --text-b: 60;
  --text-strong-r: 15;
  --text-strong-g: 23;
  --text-strong-b: 32;

  --underline-duration: 260ms;
  --underline-ease: cubic-bezier(0.22, 1, 0.36, 1);

  --header-height: 72px; /* fallback, será actualizado en runtime por el header */
}

/* === Tipografía y smoothing === */
html {
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI",
    Roboto, "Helvetica Neue", Arial, "Noto Sans";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

/* Helper gradient para hero/encabezados grandes */
.header-hero-gradient {
  background: linear-gradient(90deg, var(--turquoise), var(--navy));
}

/* === Accesibilidad / reduced motion === */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.001ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.001ms !important;
    scroll-behavior: auto !important;
  }
}

/* Focus visible (keyboard users) */
:focus-visible {
  outline: 3px solid rgba(0, 194, 199, 0.16);
  outline-offset: 2px;
  border-radius: 6px;
}

/* Small named focus helper */
.focus-ring {
  box-shadow: 0 0 0 3px rgba(168, 230, 207, 0.22);
  border-radius: 8px;
}

/* Dark mode sensible defaults */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
    --bg: #07121a;
    --text: #d1d5db;
    --text-strong: #ffffff;
  }
  html {
    color-scheme: dark;
  }
}

/* === Base — fondo y color por defecto === */
body {
  background: var(--background);
  color: rgb(var(--text-r), var(--text-g), var(--text-b)); /* cuerpo */
  margin: 0;
  font-family: inherit;
  -webkit-font-smoothing: antialiased;
}

/* Headings y texto fuerte para contraste */
h1,
h2,
h3,
h4,
h5,
h6,
strong,
b {
  color: rgb(var(--text-strong-r), var(--text-strong-g), var(--text-strong-b));
}

/* === Skip link / sr-only helpers === */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.sr-only.focus\:not-sr-only:focus,
.sr-only:focus,
.sr-only:active {
  position: fixed;
  left: 1rem;
  top: 1rem;
  width: auto;
  height: auto;
  padding: 0.45rem 0.66rem;
  background: var(--white);
  color: var(--navy);
  border-radius: 6px;
  box-shadow: 0 6px 18px rgba(2, 6, 23, 0.06);
  z-index: 9999;
}

/* === Underline micro-interaction (header links) === */
/* .nav-underline used as inline element inside links. Default hidden (scaleX(0)). */
.nav-underline {
  transform-origin: left;
  display: block;
  width: 100%;
  transform: scaleX(0);
  opacity: 0;
  transition: transform var(--underline-duration) var(--underline-ease),
    opacity var(--underline-duration) var(--underline-ease);
}

/* Only enable hover interactions on devices that support hover */
@media (hover: hover) and (pointer: fine) {
  .group:hover > .nav-underline,
  .nav-link:hover > .nav-underline {
    transform: scaleX(1);
    opacity: 1;
  }
}

/* Reduced motion: disable underline transitions */
@media (prefers-reduced-motion: reduce) {
  .nav-underline {
    transition: none;
    transform: scaleX(1);
    opacity: 1;
  }
}

/* === Anchor target offset helpers === */
#features,
#como-funciona,
#pricing,
#faq {
  scroll-margin-top: calc(var(--header-height, 72px) + 8px);
}

/* Simple utility classes (optional but handy) */
.u-shadow-soft {
  box-shadow: var(--shadow);
}
.u-rounded-md {
  border-radius: 0.5rem;
}

/* === Emergency safety overrides (al final, mínimos y documentados) ===
   Estos ayudan si alguna regla muy específica (p. ej. `text-white` en un padre)
   está forzando color blanco por accidente. Manténlos sólo si los necesitas.
*/
body,
#__next {
  background: var(--background) !important;
}

/* Forzar color de texto legible si algo lo sobrescribe con blanco.
   Dejamos esto como parche final; si lo necesitas, conservar — si no, puedes quitar !important. */
body,
body *:not(svg):not(path):not([role="img"]) {
  color: rgb(var(--text-r), var(--text-g), var(--text-b)) !important;
}

h1,
h2,
h3,
h4,
h5,
h6,
strong,
b {
  color: rgb(
    var(--text-strong-r),
    var(--text-strong-g),
    var(--text-strong-b)
  ) !important;
}

/* === Fin de global.css === */
